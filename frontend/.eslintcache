[{"/Users/seanlewis/Documents/Code/hops/frontend/src/index.js":"1","/Users/seanlewis/Documents/Code/hops/frontend/src/App.js":"2","/Users/seanlewis/Documents/Code/hops/frontend/src/reportWebVitals.js":"3","/Users/seanlewis/Documents/Code/hops/frontend/src/components/AddBeer/AddBeer.js":"4","/Users/seanlewis/Documents/Code/hops/frontend/src/components/BeerList/BeerList.js":"5","/Users/seanlewis/Documents/Code/hops/frontend/src/services/hops.service.js":"6","/Users/seanlewis/Documents/Code/hops/frontend/src/http-common.js":"7","/Users/seanlewis/Documents/Code/hops/frontend/src/frontCredentials.js":"8","/Users/seanlewis/Documents/Code/hops/frontend/src/components/BeerDetails/BeerDetails.js":"9","/Users/seanlewis/Documents/Code/hops/frontend/src/components/NavBar/NavBar.js":"10","/Users/seanlewis/Documents/Code/hops/frontend/src/components/LoginPage/LoginPage.js":"11","/Users/seanlewis/Documents/Code/hops/frontend/src/components/ProfilePage/ProfilePage.js":"12","/Users/seanlewis/Documents/Code/hops/frontend/src/components/Loading/Loading.js":"13","/Users/seanlewis/Documents/Code/hops/frontend/src/auth/ProtectedRoute.js":"14","/Users/seanlewis/Documents/Code/hops/frontend/src/components/SearchBeer/SearchBeer.js":"15","/Users/seanlewis/Documents/Code/hops/frontend/src/components/AddComment/AddComment.js":"16"},{"size":1025,"mtime":1615029266904,"results":"17","hashOfConfig":"18"},{"size":1456,"mtime":1617225427710,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1607376746245,"results":"20","hashOfConfig":"18"},{"size":14870,"mtime":1617226096979,"results":"21","hashOfConfig":"18"},{"size":3331,"mtime":1616936349175,"results":"22","hashOfConfig":"18"},{"size":289,"mtime":1615057172210,"results":"23","hashOfConfig":"18"},{"size":1208,"mtime":1615057007896,"results":"24","hashOfConfig":"18"},{"size":359,"mtime":1610910825178,"results":"25","hashOfConfig":"18"},{"size":5598,"mtime":1617225469918,"results":"26","hashOfConfig":"18"},{"size":4311,"mtime":1612129950177,"results":"27","hashOfConfig":"18"},{"size":699,"mtime":1611524878844,"results":"28","hashOfConfig":"18"},{"size":454,"mtime":1616343801819,"results":"29","hashOfConfig":"18"},{"size":220,"mtime":1614585855714,"results":"30","hashOfConfig":"18"},{"size":429,"mtime":1615922177073,"results":"31","hashOfConfig":"18"},{"size":2548,"mtime":1617656095410,"results":"32","hashOfConfig":"18"},{"size":6711,"mtime":1617313598362,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"beoc50",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},"/Users/seanlewis/Documents/Code/hops/frontend/src/index.js",[],["71","72"],"/Users/seanlewis/Documents/Code/hops/frontend/src/App.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/reportWebVitals.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/components/AddBeer/AddBeer.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/components/BeerList/BeerList.js",["73"],"import React, { useEffect, useState } from 'react';\n// import hopsDataService from '../../services/hops.service';\nimport NavBar from '../NavBar/NavBar'\nimport { Link } from 'react-router-dom';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport './BeerList.css';\nimport randomIcon from '../../static/icons/randomIcon.svg'\nimport addIcon from '../../static/icons/addIcon.svg'\n\n\nconst BeerList = () => {\n\n    const { getAccessTokenSilently } = useAuth0();\n    const [beers, setBeers] = useState([])\n\n    \n    useEffect(() => {\n        getBeers()\n    }, []);\n\n    const getBeers = async () => {\n        const token = await getAccessTokenSilently();\n        const url = 'http://localhost:8080/api/beers';\n        const options = {\n            method: 'GET',\n            headers: {\n                \"Content-type\": \"application/json\",\n                \"Access-Control-Allow-Origin\": \"*\",\n                Authorization: `Bearer ${token}`,\n            }\n        }\n\n        fetch(url, options)\n            .then(response => {\n                response.json()\n                    .then((data) => {\n                        setBeers(data);\n                }\n            )\n        .catch(e => {\n            console.log(e);\n        });\n        })\n    }    \n\n    const randomBeer = () => {\n        function getRandomInt(max) {\n            return Math.floor(Math.random() * Math.floor(max));\n        }\n        const beerIds = []\n        beers.forEach(beer => beerIds.push(beer.id))\n        const numberofBeers = beerIds.length\n        const randomNumber = getRandomInt(numberofBeers)\n\n        return beerIds[randomNumber]\n    }\n\n\n    return(\n        <div>\n            <NavBar />\n            <div>\n                <main className=\"flex flex-col justify-between\">\n                    {/* Beer List - Copy as required for others */}\n                    <div> \n                        <h1>The Beer List</h1>\n                        <div className=\"flex flex-grow overflow-x-auto\">\n                            {\n                                beers.map((beer, index) => (\n                                    <Link key={beer.id} className=\"box-shadow w-screen p-1.5\" to={`/BeerDetails/${beer.id}`}>\n                                        <img className=\"max-w-none h-44 w-44\" alt=\"Beer\" src={beer.image_url}/>\n                                        <div className=\"my-3\">\n                                        <h2 className=\"text-sm font-bold tracking-tight\">{beer.name}</h2>\n                                        <h4 className=\"text-xs font-medium tracking-tight\">{beer.brewery} &#183; {beer.beer_type}</h4>\n                                        </div>\n                                    </Link>\n                                ))\n                            }\n                        </div>\n                    </div>                        \n                </main>\n\n                <div className=\"flex items-center justify-center sticky\">\n                    <Link to={`/search`}>\n                        <img alt=\"Add Beer Icon\" src={addIcon} />\n                    </Link>\n                    <Link to={`/BeerDetails/${randomBeer()}`}>\n                        <img alt=\"Select Random Beer Icon\" src={randomIcon} />\n                    </Link>\n                </div>\n            </div>\n        </div>\n        )\n}\n\nexport default BeerList;","/Users/seanlewis/Documents/Code/hops/frontend/src/services/hops.service.js",[],["74","75"],"/Users/seanlewis/Documents/Code/hops/frontend/src/http-common.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/frontCredentials.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/components/BeerDetails/BeerDetails.js",["76","77"],"import React, { useEffect, useState } from \"react\"\n// import hopsDataService from '../../services/hops.service';\nimport NavBar from '../NavBar/NavBar'\n\nimport notesIcon from '../../static/icons/notes.svg';\nimport strengthIcon from '../../static/icons/strength.svg';\nimport typeIcon from '../../static/icons/type.svg';\nimport beerIcon from '../../static/icons/beer.svg';\nimport \"./BeerDetails.css\";\n\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\n\nfunction BeerDetails(props) {\n\n    const { getAccessTokenSilently } = useAuth0();\n\n    const [currentBeer, setCurrentBeer] = useState({\n                id: null,\n                name: \"\",\n                details: \"\",\n                beer_type: \"\",\n                brewery: \"\",\n                alc_per: \"\",\n                country_origin: \"\",\n                container: \"\",\n                image_url: \"https://hops-bucket.s3-eu-west-1.amazonaws.com/static_images/no_image_can.jpg\",\n    })\n    \n\n\n\n    useEffect(() => {\n        const getBeer = async (id) => {\n            const token = await getAccessTokenSilently();\n            const url = `http://localhost:8080/api/beers/${id}`;\n            const options = {\n                method: 'GET',\n                headers: {\n                    \"Content-type\": \"application/json\",\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    Authorization: `Bearer ${token}`,\n                }\n            }\n\n            fetch(url, options)\n                .then(response => {\n                    response.json()\n                        .then(response => {\n                            const { id, name, details, beer_type, brewery, alc_per, country_origin, container, image_url } = response\n                            setCurrentBeer({\n                                \"id\": id,\n                                \"name\": name,\n                                \"details\": details,\n                                \"beer_type\": beer_type,\n                                \"brewery\": brewery,\n                                \"alc_per\": alc_per,\n                                \"country_origin\": country_origin,\n                                \"container\": container,\n                                \"image_url\": image_url\n                            })\n                        })\n                        .catch(e => {\n                            console.log(e);\n                        });\n                })\n\n\n            // hopsDataService.get(id)\n            //     .then(response => {\n            //         const {id, name, details, beer_type, brewery, alc_per, country_origin, container, image_url} = response.data\n            //         setCurrentBeer(prevState => ({\n            //             \"id\": id,\n            //             \"name\": name,\n            //             \"details\": details,\n            //             \"beer_type\": beer_type,\n            //             \"brewery\": brewery,\n            //             \"alc_per\": alc_per,\n            //             \"country_origin\": country_origin,\n            //             \"container\": container,\n            //             \"image_url\": image_url\n            //         }))\n            //     })\n            //     .catch(e => {\n            //         console.log(e);\n            //     });\n        }\n        getBeer(props.match.params.id)\n    }, [props.match.params.id]);\n\n    \n    // console.log(\"here\")\n    // console.log(currentBeer)\n    return (\n        <div className=\"page\">\n            <NavBar />\n            <main>\n                <img className=\"beer-image\" src={currentBeer.image_url} alt=\"Beer\" />\n                \n                <div className=\"beer-header h-full container px-5\">\n                    <h1 className=\"text-xl pt-4 pb-2 font-black\">{currentBeer.name}</h1>\n                    <h2 className=\"text-base pb-4\">{currentBeer.brewery}</h2>\n                </div>\n\n                <div className=\"container\">\n                    <div className=\"pt-4 ml-4\">\n                        <img className=\"inline\" alt=\"Type Icon\" src={typeIcon} />\n                        <h4 className=\"inline text-sm font-bold pl-1\">Type</h4>\n                        <p className=\"text-base pt-1\">{currentBeer.beer_type}</p>\n                    </div>\n                    <div className=\"pt-4 ml-4\">\n                        <img className=\"inline\" alt=\"Details Icon\" src={beerIcon} />\n                        <h4 className=\"inline text-sm font-bold pl-1\">Details</h4>\n                        <p className=\"text-base pt-1\">{currentBeer.details}</p>\n                    </div>\n                    <div className=\"pt-4 ml-4\">\n                        <img className=\"inline\" alt=\"Strength Icon\" src={strengthIcon} />\n                        <h4 className=\"inline text-sm font-bold pl-1\">Strength</h4>\n                        <p className=\"text-base pt-1\">{currentBeer.alc_per}%</p>\n                    </div>\n                    <div className=\"pt-4 ml-4\">\n                        <img className=\"inline\" alt=\"Country Icon\" src={beerIcon} />\n                        <h4 className=\"inline text-sm font-bold pl-1\">Country</h4>\n                        <p className=\"text-base pt-1\">{currentBeer.country_origin}</p>\n                    </div>\n                    {/* <div className=\"pt-4 ml-4\">\n                        <img className=\"inline\" alt=\"Notes Icon\" src={notesIcon} />\n                        <h4 className=\"inline text-sm font-bold pl-1\">Notes</h4>\n                        <p className=\"text-base pt-1\"></p>\n                    </div> */}\n                </div>     \n            </main>\n        </div>\n    )\n\n\n}\n\nexport default BeerDetails;","/Users/seanlewis/Documents/Code/hops/frontend/src/components/NavBar/NavBar.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/components/LoginPage/LoginPage.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/components/ProfilePage/ProfilePage.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/components/Loading/Loading.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/auth/ProtectedRoute.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/components/SearchBeer/SearchBeer.js",["78"],"/Users/seanlewis/Documents/Code/hops/frontend/src/components/AddComment/AddComment.js",["79","80"],"import React, { useEffect, useState } from \"react\"\n// import hopsDataService from '../../services/hops.service';\nimport NavBar from '../NavBar/NavBar'\n\nimport notesIcon from '../../static/icons/notes.svg';\nimport strengthIcon from '../../static/icons/strength.svg';\nimport typeIcon from '../../static/icons/type.svg';\nimport beerIcon from '../../static/icons/beer.svg';\nimport \"./AddComment.css\";\n\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\n\nfunction AddComment(props) {\n\n    const { getAccessTokenSilently, user } = useAuth0();\n\n    const [currentBeer, setCurrentBeer] = useState({\n        id: null,\n        name: \"\",\n        details: \"\",\n        beer_type: \"\",\n        brewery: \"\",\n        alc_per: \"\",\n        country_origin: \"\",\n        container: \"\",\n        image_url: \"https://hops-bucket.s3-eu-west-1.amazonaws.com/static_images/no_image_can.jpg\",\n    })\n\n    useEffect(() => {\n        const getBeer = async (id) => {\n            const token = await getAccessTokenSilently();\n            const url = `http://localhost:8080/api/beers/${id}`;\n            const options = {\n                method: 'GET',\n                headers: {\n                    \"Content-type\": \"application/json\",\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    Authorization: `Bearer ${token}`,\n                }\n            }\n            fetch(url, options)\n                .then(response => {\n                    response.json()\n                        .then(response => {\n                            const { id, name, details, beer_type, brewery, alc_per, country_origin, container, image_url } = response\n                            setCurrentBeer({\n                                \"id\": id,\n                                \"name\": name,\n                                \"details\": details,\n                                \"beer_type\": beer_type,\n                                \"brewery\": brewery,\n                                \"alc_per\": alc_per,\n                                \"country_origin\": country_origin,\n                                \"container\": container,\n                                \"image_url\": image_url\n                            })\n                        })\n                        .catch(e => {\n                            console.log(e);\n                        });\n                })\n        }\n        getBeer(props.match.params.id)\n    }, [props.match.params.id]);\n\n    const [beer, setBeer] = useState({\n        user_comment: \"\"\n    })    \n\n    const onChangeComment = (e) => {\n        setBeer({\n            ...beer,\n            user_comment: e.target.value\n        });\n    }\n\n    const saveUserComment = async (e) => {\n\n        const token = await getAccessTokenSilently();\n        const url = 'http://localhost:8080/api/beers';\n\n        let data = {\n            beer_id: currentBeer.id,\n            user_id: user.sub,\n            comment: beer.user_comment\n        };\n\n        const options = {\n            method: 'GET',\n            headers: {\n                \"Content-type\": \"application/json\",\n                \"Access-Control-Allow-Origin\": \"*\",\n                Authorization: `Bearer ${token}`,\n            }\n        }\n\n        fetch(url, options)\n            .then(() => {\n                setBeer({\n                    ...beer,\n                    submitted: true\n                });\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n``\n    }\n\n    return (\n        <div className=\"page\">\n\n            <NavBar />\n\n            <main>\n                <img className=\"beer-image\" src={currentBeer.image_url} alt=\"Beer\" />\n\n                <div className=\"beer-header h-full container px-5\">\n                    <h1 className=\"text-xl pt-4 pb-2 font-black\">{currentBeer.name}</h1>\n                    <h2 className=\"text-base pb-4\">{currentBeer.brewery}</h2>\n                </div>\n\n                <div className=\"container\">\n                    <div className=\"pt-4 ml-4\">\n                        <img className=\"inline\" alt=\"Type Icon\" src={typeIcon} />\n                        <h4 className=\"inline text-sm font-bold pl-1\">Type</h4>\n                        <p className=\"text-base pt-1\">{currentBeer.beer_type}</p>\n                    </div>\n                    <div className=\"pt-4 ml-4\">\n                        <img className=\"inline\" alt=\"Details Icon\" src={beerIcon} />\n                        <h4 className=\"inline text-sm font-bold pl-1\">Details</h4>\n                        <p className=\"text-base pt-1\">{currentBeer.details}</p>\n                    </div>\n                    <div className=\"pt-4 ml-4\">\n                        <img className=\"inline\" alt=\"Strength Icon\" src={strengthIcon} />\n                        <h4 className=\"inline text-sm font-bold pl-1\">Strength</h4>\n                        <p className=\"text-base pt-1\">{currentBeer.alc_per}%</p>\n                    </div>\n                    <div className=\"pt-4 ml-4\">\n                        <img className=\"inline\" alt=\"Country Icon\" src={beerIcon} />\n                        <h4 className=\"inline text-sm font-bold pl-1\">Country</h4>\n                        <p className=\"text-base pt-1\">{currentBeer.country_origin}</p>\n                    </div>\n\n                    <form onSubmit={saveUserComment}>\n\n                        <div className=\"shadow overflow-hidden sm:rounded-md\">\n                            <div className=\"px-4 py-5 bg-white sm:p-6\">\n                                <div className=\"col-span-6\">\n                                    <img className=\"inline\" alt=\"Notes Icon\" src={notesIcon} />\n                                    <label htmlFor=\"user_comment\" className=\"inline pl-1 text-xs font-bold tracking-tight\">Comments</label>\n                                    <input type=\"text\" name=\"user_comment\" id=\"user_comment\" autoComplete=\"user_comment\" className=\"mt-1 h-16 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-black-500\"\n                                        value={beer.user_comment}\n                                        onChange={onChangeComment} />\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"flex justify-center h-16 w-full button-background content-center\">\n                            <button type=\"submit\" className=\"m-auto h-11 w-4/5 bg-black text-white block shadow-sm sm:text-sm border-black-500 \" >\n                                Penny for your thoughts\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </main>\n        </div>\n    )\n\n\n}\n\nexport default AddComment;",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":19,"column":8,"nodeType":"87","endLine":19,"endColumn":10,"suggestions":"88"},{"ruleId":"81","replacedBy":"89"},{"ruleId":"83","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":17},{"ruleId":"85","severity":1,"message":"95","line":89,"column":8,"nodeType":"87","endLine":89,"endColumn":31,"suggestions":"96"},{"ruleId":"91","severity":1,"message":"97","line":1,"column":27,"nodeType":"93","messageId":"94","endLine":1,"endColumn":36},{"ruleId":"85","severity":1,"message":"95","line":65,"column":8,"nodeType":"87","endLine":65,"endColumn":31,"suggestions":"98"},{"ruleId":"91","severity":1,"message":"99","line":83,"column":13,"nodeType":"93","messageId":"94","endLine":83,"endColumn":17},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBeers'. Either include it or remove the dependency array.","ArrayExpression",["102"],["100"],["101"],"no-unused-vars","'notesIcon' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getAccessTokenSilently'. Either include it or remove the dependency array.",["103"],"'useEffect' is defined but never used.",["104"],"'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"107","fix":"109"},"Update the dependencies array to be: [getBeers]",{"range":"110","text":"111"},"Update the dependencies array to be: [getAccessTokenSilently, props.match.params.id]",{"range":"112","text":"113"},{"range":"114","text":"113"},[553,555],"[getBeers]",[3305,3328],"[getAccessTokenSilently, props.match.params.id]",[2387,2410]]