[{"/Users/seanlewis/Documents/Code/hops/frontend/src/index.js":"1","/Users/seanlewis/Documents/Code/hops/frontend/src/App.js":"2","/Users/seanlewis/Documents/Code/hops/frontend/src/reportWebVitals.js":"3","/Users/seanlewis/Documents/Code/hops/frontend/src/components/AddBeer/AddBeer.js":"4","/Users/seanlewis/Documents/Code/hops/frontend/src/components/BeerList/BeerList.js":"5","/Users/seanlewis/Documents/Code/hops/frontend/src/services/hops.service.js":"6","/Users/seanlewis/Documents/Code/hops/frontend/src/http-common.js":"7","/Users/seanlewis/Documents/Code/hops/frontend/src/frontCredentials.js":"8","/Users/seanlewis/Documents/Code/hops/frontend/src/components/BeerDetails/BeerDetails.js":"9","/Users/seanlewis/Documents/Code/hops/frontend/src/components/NavBar/NavBar.js":"10","/Users/seanlewis/Documents/Code/hops/frontend/src/components/LoginPage/LoginPage.js":"11","/Users/seanlewis/Documents/Code/hops/frontend/src/components/ProfilePage/ProfilePage.js":"12","/Users/seanlewis/Documents/Code/hops/frontend/src/components/Loading/Loading.js":"13","/Users/seanlewis/Documents/Code/hops/frontend/src/auth/ProtectedRoute.js":"14","/Users/seanlewis/Documents/Code/hops/frontend/src/components/SearchBeer/SearchBeer.js":"15","/Users/seanlewis/Documents/Code/hops/frontend/src/components/AddComment/AddComment.js":"16","/Users/seanlewis/Documents/Code/hops/frontend/src/components/EditBeer/EditBeer.js":"17","/Users/seanlewis/Documents/Code/hops/frontend/src/components/SearchModal/SearchModal.js":"18"},{"size":1184,"mtime":1632258055600,"results":"19","hashOfConfig":"20"},{"size":1705,"mtime":1628626682459,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1607376746245,"results":"22","hashOfConfig":"20"},{"size":15900,"mtime":1627680362447,"results":"23","hashOfConfig":"20"},{"size":5228,"mtime":1627680291414,"results":"24","hashOfConfig":"20"},{"size":289,"mtime":1615057172210,"results":"25","hashOfConfig":"20"},{"size":1409,"mtime":1627926739179,"results":"26","hashOfConfig":"20"},{"size":359,"mtime":1610910825178,"results":"27","hashOfConfig":"20"},{"size":9580,"mtime":1627680464823,"results":"28","hashOfConfig":"20"},{"size":4311,"mtime":1612129950177,"results":"29","hashOfConfig":"20"},{"size":722,"mtime":1628626258163,"results":"30","hashOfConfig":"20"},{"size":454,"mtime":1616343801819,"results":"31","hashOfConfig":"20"},{"size":220,"mtime":1614585855714,"results":"32","hashOfConfig":"20"},{"size":429,"mtime":1615922177073,"results":"33","hashOfConfig":"20"},{"size":2747,"mtime":1627680551847,"results":"34","hashOfConfig":"20"},{"size":6712,"mtime":1618173835623,"results":"35","hashOfConfig":"20"},{"size":12639,"mtime":1627680522262,"results":"36","hashOfConfig":"20"},{"size":2952,"mtime":1627680593519,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"beoc50",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},"/Users/seanlewis/Documents/Code/hops/frontend/src/index.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/App.js",[],["83","84"],"/Users/seanlewis/Documents/Code/hops/frontend/src/reportWebVitals.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/components/AddBeer/AddBeer.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/components/BeerList/BeerList.js",["85"],"import React, { useEffect, useState } from 'react';\n// import hopsDataService from '../../services/hops.service';\nimport NavBar from '../NavBar/NavBar'\nimport { Link } from 'react-router-dom';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport './BeerList.css';\nimport randomIcon from '../../static/icons/randomIcon.svg'\nimport addIcon from '../../static/icons/addIcon.svg'\nimport searchIcon from '../../static/icons/searchIcon.svg'\nimport SearchModal from '../SearchModal/SearchModal'\nimport httpValue from '../../http-common'\n\nconst BeerList = () => {\n\n    const { getAccessTokenSilently, user } = useAuth0();\n    const [beers, setBeers] = useState([])\n    const [commentedBeers, setCommentedBeers] = useState([])\n    const [modalOpen, SetModalOpen] = useState(false)\n\n    useEffect(() => {\n        getBeers()\n    }, []);\n\n    const getBeers = async () => {\n        const token = await getAccessTokenSilently();\n        const beerUrl = `${httpValue}/beers`;\n        const commentedUrl = `${httpValue}/beers/commentedBeers`\n        console.log(beerUrl)\n        const options = {\n            method: 'GET',\n            headers: {\n                \"Content-type\": \"application/json\",\n                \"Access-Control-Allow-Origin\": \"*\",\n                Authorization: `Bearer ${token}`,\n                user: user.sub\n            }\n        }\n\n        Promise.all([\n            fetch(beerUrl, options)\n                .then(response => response.json()),\n            fetch(commentedUrl, options)\n                .then(response => response.json())\n        ])\n        .then(response => {\n            setBeers(response[0])\n            setCommentedBeers(response[1])\n            // console.log(response[1])\n        }).catch(e => {\n            console.log(e);\n        });\n    }    \n\n    const randomBeer = () => {\n        function getRandomInt(max) {\n            return Math.floor(Math.random() * Math.floor(max));\n        }\n        const beerIds = []\n        beers.forEach(beer => beerIds.push(beer.id))\n        const numberofBeers = beerIds.length\n        const randomNumber = getRandomInt(numberofBeers)\n\n        return beerIds[randomNumber]\n    }\n\n    const handleOpen = () => {\n        SetModalOpen(true);\n    };\n\n    const handleClose = () => {\n        SetModalOpen(false);\n    }\n\n\n    return(\n        <div className=\"h-screen\">\n            <NavBar />\n            <div>\n                <main className=\"flex flex-col justify-between\">\n                    {/* Beer List - Copy as required for others */}\n                    <div> \n                        <h1>Beers You've Added</h1>\n                        <div className=\"flex flex-grow overflow-x-auto\">\n                            {\n                                beers.map((beer, index) => (\n                                    <Link key={beer.id} className=\"box-shadow w-screen p-1.5\" to={`/BeerDetails/${beer.id}`}>\n                                        <img className=\"max-w-none h-44 w-44\" alt=\"Beer\" src={beer.image_url}/>\n                                        <div className=\"my-3\">\n                                        <h2 className=\"text-sm font-bold tracking-tight\">{beer.name}</h2>\n                                        <h4 className=\"text-xs font-medium tracking-tight\">{beer.brewery} &#183; {beer.beer_type}</h4>\n                                        </div>\n                                    </Link>\n                                ))\n                            }\n                        </div>\n                    </div>\n\n                    <div>\n                        <h1>Beers You've Commented On</h1>\n                        <div className=\"flex flex-grow overflow-x-auto\">\n                            {\n                                commentedBeers.map((beer, index) => (\n                                    <Link key={beer.beer.id} className=\"box-shadow w-screen p-1.5\" to={`/BeerDetails/${beer.beer.id}`}>\n                                        <img className=\"max-w-none h-44 w-44\" alt=\"Beer\" src={beer.beer.image_url} />\n                                        <div className=\"my-3\">\n                                            <h2 className=\"text-sm font-bold tracking-tight\">{beer.beer.name}</h2>\n                                            <h4 className=\"text-xs font-medium tracking-tight\">{beer.beer.brewery} &#183; {beer.beer.beer_type}</h4>\n                                        </div>\n                                    </Link>\n                                ))\n                            }\n                        </div>\n                    </div>\n                </main>\n            </div>\n            <div className=\"flex inset-center\">\n                <Link to={`/search`}>\n                    <img alt=\"Add Beer Icon\" src={addIcon} />\n                </Link>\n                {/* <Link to={`/search`}> */}\n                <img alt=\"Add Beer Icon\" src={searchIcon} onClick={handleOpen}/>\n                {/* </Link> */}\n                <Link to={`/BeerDetails/${randomBeer()}`}>\n                    <img alt=\"Select Random Beer Icon\" src={randomIcon} />\n                </Link>\n            </div>\n            <SearchModal show={modalOpen} handleClose={handleClose}/>\n        </div>\n        )\n}\n\nexport default BeerList;","/Users/seanlewis/Documents/Code/hops/frontend/src/services/hops.service.js",[],["86","87"],"/Users/seanlewis/Documents/Code/hops/frontend/src/http-common.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/frontCredentials.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/components/BeerDetails/BeerDetails.js",["88","89"],"import React, { useEffect, useState } from \"react\"\n// import hopsDataService from '../../services/hops.service';\nimport NavBar from '../NavBar/NavBar'\n\nimport notesIcon from '../../static/icons/notes.svg';\nimport strengthIcon from '../../static/icons/strength.svg';\nimport typeIcon from '../../static/icons/type.svg';\nimport beerIcon from '../../static/icons/beer.svg';\nimport \"./BeerDetails.css\";\n\nimport { useAuth0, user } from \"@auth0/auth0-react\";\n\nimport EditBeer from '../../components/EditBeer/EditBeer'\nimport httpValue from '../../http-common'\n\n\nfunction BeerDetails(props) {\n    const { getAccessTokenSilently, user } = useAuth0();\n\n    const [isEdit, setIsEdit] = useState(false)\n\n    const [currentBeer, setCurrentBeer] = useState({\n                id: null,\n                name: \"\",\n                details: \"\",\n                beer_type: \"\",\n                brewery: \"\",\n                alc_per: \"\",\n                country_origin: \"\",\n                container: \"\",\n                image_url: \"https://hops-bucket.s3-eu-west-1.amazonaws.com/static_images/no_image_can.jpg\",\n                added_by: \"\"\n    })\n\n    const [currentComment, setCurrentComment] = useState({\n        \"commentBoole\": false\n    })\n\n    const [updateComment, setUpdateComment] = useState({\n        user_comment: \"\"\n    })\n\n    const onChangeComment = (e) => {\n        setUpdateComment({\n            user_comment: e.target.value\n        });\n    }\n\n    const saveUserComment = async (e) => {\n        const token = await getAccessTokenSilently();\n        const commentUrl = `${httpValue}/beers/addcomment`\n        const data = {\n            beer_id: currentBeer.id,\n            comment: updateComment.user_comment\n        } \n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-type\": \"application/json\",\n                \"Access-Control-Allow-Origin\": \"*\",\n                Authorization: `Bearer ${token}`,\n                user: user.sub\n            },\n            body: JSON.stringify(data)\n        }\n\n        fetch(commentUrl, options)\n            .then((data) => {\n                console.log(data)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    useEffect(() => {\n        const getBeer = async (id) => {\n            const token = await getAccessTokenSilently();\n            const beerUrl = `${httpValue}/beers/${id}`;\n            const commentUrl = `${httpValue}/beers/getcomment/${id}`;\n            \n            const options = {\n                method: 'GET',\n                headers: {\n                    \"Content-type\": \"application/json\",\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    Authorization: `Bearer ${token}`,\n                    user: user.sub\n                }\n            }\n            \n            fetch(beerUrl, options)\n                .then(response => response.json())\n                .then(response => {\n                    let {id, name, alc_per, beer_type, brewery, container, country_origin, details, image_url, added_by} = { ...response};\n\n                    setCurrentBeer({\n                        \"id\": id,\n                        \"name\": name,\n                        \"details\": details,\n                        \"beer_type\": beer_type,\n                        \"brewery\": brewery,\n                        \"alc_per\": alc_per,\n                        \"country_origin\": country_origin,\n                        \"container\": container,\n                        \"image_url\": image_url,\n                        \"added_by\": added_by\n                    })\n                })\n                .catch(e => {\n                    console.error(e);\n                });\n            \n            fetch(commentUrl, options)\n                .then(response => response.json())\n                .then(response => {\n                    if (response.body !== \"none\") {\n                        let { comment } = { ...response };\n                        setCurrentComment({\n                            \"commentBoole\": true,\n                            \"user_comment\": comment\n                        })\n                    } else {\n                        setCurrentComment({\n                            \"commentBoole\": false\n                        })\n                    }\n\n                })\n                .catch(e => {\n                    console.error(e);\n                });\n        }\n\n        getBeer(props.match.params.id)\n    }, [props.match.params.id]);\n\n\n    const editBeer = () => {\n        setIsEdit(true)\n    }\n\n    return (\n        <div className=\"page\">\n            <NavBar />\n\n            {isEdit ? \n                <EditBeer\n                    id={currentBeer.id}\n                    name={currentBeer.name}\n                    details={currentBeer.details}\n                    beerType={currentBeer.beer_type}\n                    brewery={currentBeer.brewery}\n                    alcPer={currentBeer.alc_per}\n                    country={currentBeer.country_origin}\n                    container={currentBeer.container}\n                    comment={currentComment.user_comment}\n                />\n                :\n                <main>\n                    <img className=\"beer-image\" src={currentBeer.image_url} alt=\"Beer\" />\n\n                    <div className=\"beer-header h-full container px-5\">\n                        <h1 className=\"text-xl pt-4 pb-2 font-black\">{currentBeer.name}</h1>\n                        <h2 className=\"text-base pb-4\">{currentBeer.brewery}</h2>\n                    </div>\n\n                    <div className=\"container\">\n                        <div className=\"pt-4 ml-4\">\n                            <img className=\"inline\" alt=\"Type Icon\" src={typeIcon} />\n                            <h4 className=\"inline text-sm font-bold pl-1\">Type</h4>\n                            <p className=\"text-base pt-1\">{currentBeer.beer_type}</p>\n                        </div>\n                        <div className=\"pt-4 ml-4\">\n                            <img className=\"inline\" alt=\"Details Icon\" src={beerIcon} />\n                            <h4 className=\"inline text-sm font-bold pl-1\">Details</h4>\n                            <p className=\"text-base pt-1\">{currentBeer.details}</p>\n                        </div>\n                        <div className=\"pt-4 ml-4\">\n                            <img className=\"inline\" alt=\"Strength Icon\" src={strengthIcon} />\n                            <h4 className=\"inline text-sm font-bold pl-1\">Strength</h4>\n                            <p className=\"text-base pt-1\">{currentBeer.alc_per}%</p>\n                        </div>\n                        <div className=\"pt-4 ml-4\">\n                            <img className=\"inline\" alt=\"Country Icon\" src={beerIcon} />\n                            <h4 className=\"inline text-sm font-bold pl-1\">Country</h4>\n                            <p className=\"text-base pt-1\">{currentBeer.country_origin}</p>\n                        </div>\n\n                        {currentComment.commentBoole ? \n                            <div className=\"pt-4 ml-4\">\n                                <img className=\"inline\" alt=\"Notes Icon\" src={notesIcon} />\n                                <h4 className=\"inline text-sm font-bold pl-1\">Notes</h4>\n                                <p className=\"text-base pt-1\">{currentComment.user_comment}</p>\n                            </div>\n                            :\n                            <form>\n                                <div className=\"shadow overflow-hidden sm:rounded-md\">\n                                    <div className=\"px-4 py-5 bg-white sm:p-6\">\n                                        <div className=\"col-span-6\">\n                                            <img className=\"inline\" alt=\"Notes Icon\" src={notesIcon} />\n                                            <label htmlFor=\"user_comment\" className=\"inline pl-1 text-xs font-bold tracking-tight\">Comments</label>\n                                            <input type=\"text\" name=\"user_comment\" id=\"user_comment\" autoComplete=\"user_comment\" className=\"mt-1 h-16 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-black-500\"\n                                                onChange={onChangeComment}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"flex justify-center h-16 w-full button-background content-center\">\n                                    <button onClick={saveUserComment} type=\"submit\" className=\"m-auto h-11 w-4/5 bg-black text-white block shadow-sm sm:text-sm border-black-500 \" >\n                                        Add Your Thoughts\n                                    </button>\n                                </div>\n                            </form>\n                        }\n\n                        {currentBeer.added_by === user.sub &&\n                            <div className=\"flex justify-center h-16 w-full button-background content-center\">\n                                <button onClick={editBeer} className=\"m-auto h-11 w-4/5 bg-black text-white block shadow-sm sm:text-sm border-black-500 \" >\n                                    You added it, you can edit it!\n                            </button>\n                            </div>\n                        }\n                    </div>\n                </main>\n            }\n        </div>\n    )\n}\n\nexport default BeerDetails;","/Users/seanlewis/Documents/Code/hops/frontend/src/components/NavBar/NavBar.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/components/LoginPage/LoginPage.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/components/ProfilePage/ProfilePage.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/components/Loading/Loading.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/auth/ProtectedRoute.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/components/SearchBeer/SearchBeer.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/components/AddComment/AddComment.js",["90"],"import React, { useEffect, useState } from \"react\"\n// import hopsDataService from '../../services/hops.service';\nimport NavBar from '../NavBar/NavBar'\n\nimport notesIcon from '../../static/icons/notes.svg';\nimport strengthIcon from '../../static/icons/strength.svg';\nimport typeIcon from '../../static/icons/type.svg';\nimport beerIcon from '../../static/icons/beer.svg';\nimport \"./AddComment.css\";\n\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\n\nfunction AddComment(props) {\n\n    const { getAccessTokenSilently, user } = useAuth0();\n\n    const [currentBeer, setCurrentBeer] = useState({\n        id: null,\n        name: \"\",\n        details: \"\",\n        beer_type: \"\",\n        brewery: \"\",\n        alc_per: \"\",\n        country_origin: \"\",\n        container: \"\",\n        image_url: \"https://hops-bucket.s3-eu-west-1.amazonaws.com/static_images/no_image_can.jpg\",\n    })\n\n    useEffect(() => {\n        const getBeer = async (id) => {\n            const token = await getAccessTokenSilently();\n            const url = `http://localhost:8080/api/beers/${id}`;\n            const options = {\n                method: 'GET',\n                headers: {\n                    \"Content-type\": \"application/json\",\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    Authorization: `Bearer ${token}`,\n                }\n            }\n            fetch(url, options)\n                .then(response => {\n                    response.json()\n                        .then(response => {\n                            const { id, name, details, beer_type, brewery, alc_per, country_origin, container, image_url } = response\n                            setCurrentBeer({\n                                \"id\": id,\n                                \"name\": name,\n                                \"details\": details,\n                                \"beer_type\": beer_type,\n                                \"brewery\": brewery,\n                                \"alc_per\": alc_per,\n                                \"country_origin\": country_origin,\n                                \"container\": container,\n                                \"image_url\": image_url\n                            })\n                        })\n                        .catch(e => {\n                            console.log(e);\n                        });\n                })\n        }\n        getBeer(props.match.params.id)\n    }, [props.match.params.id]);\n\n    const [comment, setComment] = useState({\n        user_comment: \"\"\n    })    \n\n    const onChangeComment = (e) => {\n        setComment({\n            user_comment: e.target.value\n        });\n    }\n\n    const saveUserComment = async (e) => {\n\n        const token = await getAccessTokenSilently();\n        const url = 'http://localhost:8080/api/beers/addcomment';\n\n        let data = {\n            beer_id: currentBeer.id,\n            user_id: user.sub,\n            comment: comment.user_comment\n        };\n\n        const options = {\n            method: 'POST',\n            headers: {\n                \"Content-type\": \"application/json\",\n                \"Access-Control-Allow-Origin\": \"*\",\n                Authorization: `Bearer ${token}`,\n                user: user.sub\n            },\n            body: JSON.stringify(data)\n        }\n\n        fetch(url, options)\n            .then((data) => {\n                console.log(data)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    return (\n        <div className=\"page\">\n\n            <NavBar />\n\n            <main>\n                <img className=\"beer-image\" src={currentBeer.image_url} alt=\"Beer\" />\n\n                <div className=\"beer-header h-full container px-5\">\n                    <h1 className=\"text-xl pt-4 pb-2 font-black\">{currentBeer.name}</h1>\n                    <h2 className=\"text-base pb-4\">{currentBeer.brewery}</h2>\n                </div>\n\n                <div className=\"container\">\n                    <div className=\"pt-4 ml-4\">\n                        <img className=\"inline\" alt=\"Type Icon\" src={typeIcon} />\n                        <h4 className=\"inline text-sm font-bold pl-1\">Type</h4>\n                        <p className=\"text-base pt-1\">{currentBeer.beer_type}</p>\n                    </div>\n                    <div className=\"pt-4 ml-4\">\n                        <img className=\"inline\" alt=\"Details Icon\" src={beerIcon} />\n                        <h4 className=\"inline text-sm font-bold pl-1\">Details</h4>\n                        <p className=\"text-base pt-1\">{currentBeer.details}</p>\n                    </div>\n                    <div className=\"pt-4 ml-4\">\n                        <img className=\"inline\" alt=\"Strength Icon\" src={strengthIcon} />\n                        <h4 className=\"inline text-sm font-bold pl-1\">Strength</h4>\n                        <p className=\"text-base pt-1\">{currentBeer.alc_per}%</p>\n                    </div>\n                    <div className=\"pt-4 ml-4\">\n                        <img className=\"inline\" alt=\"Country Icon\" src={beerIcon} />\n                        <h4 className=\"inline text-sm font-bold pl-1\">Country</h4>\n                        <p className=\"text-base pt-1\">{currentBeer.country_origin}</p>\n                    </div>\n\n                    <form onSubmit={saveUserComment}>\n\n                        <div className=\"shadow overflow-hidden sm:rounded-md\">\n                            <div className=\"px-4 py-5 bg-white sm:p-6\">\n                                <div className=\"col-span-6\">\n                                    <img className=\"inline\" alt=\"Notes Icon\" src={notesIcon} />\n                                    <label htmlFor=\"user_comment\" className=\"inline pl-1 text-xs font-bold tracking-tight\">Comments</label>\n                                    <input type=\"text\" name=\"user_comment\" id=\"user_comment\" autoComplete=\"user_comment\" className=\"mt-1 h-16 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-black-500\"\n                                        value={comment.user_comment}\n                                        onChange={onChangeComment} />\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"flex justify-center h-16 w-full button-background content-center\">\n                            <button type=\"submit\" className=\"m-auto h-11 w-4/5 bg-black text-white block shadow-sm sm:text-sm border-black-500 \" >\n                                Penny for your thoughts\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </main>\n        </div>\n    )\n\n\n}\n\nexport default AddComment;",["91","92"],"/Users/seanlewis/Documents/Code/hops/frontend/src/components/EditBeer/EditBeer.js",["93"],"import React, { useState } from \"react\"\n// import hopsDataService from '../../services/hops.service';\nimport S3FileUpload from 'react-s3'\nimport notesIcon from '../../static/icons/notes.svg';\nimport strengthIcon from '../../static/icons/strength.svg';\nimport typeIcon from '../../static/icons/type.svg';\nimport beerIcon from '../../static/icons/beer.svg';\nimport \"./EditBeer.css\";\nimport addPhoto from '../../static/icons/addPhoto.svg';\n\nimport axios from 'axios'\nimport httpValue from '../../http-common'\n\n\nimport { useAuth0, user } from \"@auth0/auth0-react\";\n\nconst config = {\n    bucketName: \"hops-bucket\",\n    dirName: \"user-images\",\n    accessKey: process.env.REACT_APP_S3_ACCESS_KEY,\n    secretKey: process.env.REACT_APP_S3_SECRET_KEY,\n    region: 'eu-west-1',\n}\n\n\nfunction EditBeerDetails(props) {\n    const { getAccessTokenSilently, user } = useAuth0();\n\n    const [beer, setBeer] = useState({\n        id: props.id,\n        name: props.name,\n        details: props.details,\n        beerType: props.beer_type,\n        brewery: props.brewery,\n        alcPer: props.alc_per,\n        country: props.country_origin,\n        container: props.container,\n        user_comment: \"\",\n        image_url: \"https://hops-bucket.s3-eu-west-1.amazonaws.com/static_images/no_image_can.jpg\",\n        added_by: \"\",\n        submitted: false\n    })\n\n    const onChangeName = (e) => {\n        setBeer({\n            ...beer,\n            name: e.target.value\n        });\n    }\n\n    const onChangeDetails = (e) => {\n        setBeer({\n            ...beer,\n            details: e.target.value\n        });\n    }\n\n    const onChangeBeerType = (e) => {\n        setBeer({\n            ...beer,\n            beerType: e.target.value\n        });\n    }\n\n    const onChangeBrewery = (e) => {\n        setBeer({\n            ...beer,\n            brewery: e.target.value\n        });\n    }\n\n    const onChangeAlcPer = (e) => {\n        setBeer({\n            ...beer,\n            alcPer: e.target.value\n        });\n    }\n\n    const onChangeCountry = (e) => {\n        setBeer({\n            ...beer,\n            country: e.target.value\n        });\n    }\n\n    const onChangeContainer = (e) => {\n        setBeer({\n            ...beer,\n            container: e.target.value\n        });\n    }\n\n    const onChangeComment = (e) => {\n        setBeer({\n            ...beer,\n            user_comment: e.target.value\n        });\n    }\n\n    const onChangeImageS3upload = (e) => {\n        setBeer({\n            ...beer,\n            image_url: \"https://hops-bucket.s3-eu-west-1.amazonaws.com/static_images/beer_loading.gif\"\n        })\n\n        // form[0] is the loaction of the image upload field in the form. \n        S3FileUpload.uploadFile(e.target.form[0].files[0], config)\n            .then((upload) => {\n                console.log(upload.location)\n                this.setState({\n                    image_url: upload.location,\n                })\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    const editBeer = async (e) => {\n\n        const token = await getAccessTokenSilently();\n        const url = `${httpValue}/beers/edit/${beer.id}`;\n\n        let data = {\n            name: beer.name,\n            details: beer.details,\n            beer_type: beer.beerType,\n            brewery: beer.brewery,\n            alc_per: beer.alcPer,\n            country_origin: beer.country,\n            container: beer.container,\n            user_comment: beer.user_comment,\n            image_url: beer.image_url,\n            added_by: user.sub,\n        };\n\n        const headers = {\n            \"Content-type\": \"application/json\",\n            \"Access-Control-Allow-Origin\": \"*\",\n            Authorization: `Bearer ${token}`,\n        }\n\n        axios.post(url, data, {\n            headers: headers\n        })\n            .then(() => {\n                setBeer({\n                    ...beer,\n                    submitted: true\n                });\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n\n    }\n\n    return (\n        <div className=\"page\">\n            <div className=\"mt-5 md:mt-0 md:col-span-2\">\n                <form onSubmit={editBeer}>\n\n                    <div className=\"relative\">\n                        <img className=\"beer-image\" src={beer.image_url} alt=\"Beer Placeholder\"></img>\n\n                        <div className=\"absolute top-44 flex w-full items-center justify-center\">\n                            <label className=\"flex flex-col items-center tracking-wide uppercase cursor-pointer hover:bg-blue hover:text-white\">\n                                <img src={addPhoto} alt=\"add icon\" />\n                                <input\n                                    className=\"hidden\"\n                                    src={addPhoto}\n                                    onChange={onChangeImageS3upload}\n                                    type=\"file\"\n                                    id=\"input-image\"\n                                    name=\"input-Image\"\n                                    accept=\"image/*\"\n                                    capture=\"camera\"\n                                />\n                            </label>\n                        </div>\n                    </div>\n\n                    <div className=\"shadow overflow-hidden sm:rounded-md\">\n                        <div className=\"px-4 py-5 bg-white sm:p-6\">\n                            <div className=\"col-span-6\">\n                                <img className=\"inline\" alt=\"Beer Icon\" src={beerIcon} />\n                                <label htmlFor=\"name\" className=\"inline pl-1 text-xs font-bold tracking-tight\">Beer Name</label>\n                                <input required type=\"text\" name=\"name\" id=\"name\" autoComplete=\"Beer Name\" className=\"mt-1 focus:solid-indigo-700 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-black-500\"\n                                    value={beer.name}\n                                    onChange={onChangeName} />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"shadow overflow-hidden sm:rounded-md\">\n                        <div className=\"px-4 py-5 bg-white sm:p-6\">\n                            <div className=\"col-span-6\">\n                                <img className=\"inline\" alt=\"Description Icon\" src={beerIcon} />\n                                <label htmlFor=\"description\" className=\"inline pl-1 text-xs font-bold tracking-tight\">Description</label>\n                                <input type=\"text\" name=\"description\" id=\"description\" autoComplete=\"description\" className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-black-500\"\n                                    value={beer.details}\n                                    onChange={onChangeDetails} />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"shadow overflow-hidden sm:rounded-md\">\n                        <div className=\"px-4 py-5 bg-white sm:p-6\">\n\n                            <div className=\"col-span-6\">\n                                <img className=\"inline\" alt=\"Type Icon\" src={typeIcon} />\n                                <label htmlFor=\"beerType\" className=\"inline pl-1 text-xs font-bold tracking-tight\">Beer Type</label>\n                                <input type=\"text\" name=\"beerType\" id=\"beerType\" autoComplete=\"Beer Type\" className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-black-500\"\n                                    value={beer.beerType}\n                                    onChange={onChangeBeerType} />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"shadow overflow-hidden sm:rounded-md\">\n                        <div className=\"px-4 py-5 bg-white sm:p-6\">\n                            <div className=\"col-span-6\">\n                                <img className=\"inline\" alt=\"Brewery Icon\" src={beerIcon} />\n                                <label htmlFor=\"brewery\" className=\"inline pl-1 text-xs font-bold tracking-tight\">Brewery</label>\n                                <input type=\"text\" name=\"brewery\" id=\"brewery\" autoComplete=\"brewery\" className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-black-500\"\n                                    value={beer.brewery}\n                                    onChange={onChangeBrewery} />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"shadow overflow-hidden sm:rounded-md\">\n                        <div className=\"px-4 py-5 bg-white sm:p-6\">\n                            <div className=\"col-span-6\">\n                                <img className=\"inline\" alt=\"Strength Icon\" src={strengthIcon} />\n                                <label htmlFor=\"alcPer\" className=\"inline pl-1 text-xs font-bold tracking-tight\">Alcohol Percentage</label>\n                                <input type=\"text\" name=\"alcPer\" id=\"alcPer\" autoComplete=\"alcPer\" className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-black-500\"\n                                    value={beer.alcPer}\n                                    onChange={onChangeAlcPer} />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"shadow overflow-hidden sm:rounded-md\">\n                        <div className=\"px-4 py-5 bg-white sm:p-6\">\n                            <div className=\"col-span-6\">\n                                <img className=\"inline\" alt=\"Country Icon\" src={beerIcon} />\n                                <label htmlFor=\"country\" className=\"inline pl-1 text-xs font-bold tracking-tight\">Country</label>\n                                <input type=\"text\" name=\"country\" id=\"country\" autoComplete=\"country\" className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-black-500\"\n                                    value={beer.country}\n                                    onChange={onChangeCountry} />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"shadow overflow-hidden sm:rounded-md\">\n                        <div className=\"px-4 py-5 bg-white sm:p-6\">\n                            <div className=\"col-span-6\">\n                                <img className=\"inline\" alt=\"Container Icon\" src={beerIcon} />\n                                <label htmlFor=\"container\" className=\"inline pl-1 text-xs font-bold tracking-tight\">Container</label>\n                                <input type=\"text\" name=\"container\" id=\"container\" autoComplete=\"container\" className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-black-500\"\n                                    value={beer.container}\n                                    onChange={onChangeContainer} />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"shadow overflow-hidden sm:rounded-md\">\n                        <div className=\"px-4 py-5 bg-white sm:p-6\">\n                            <div className=\"col-span-6\">\n                                <img className=\"inline\" alt=\"Notes Icon\" src={notesIcon} />\n                                <label htmlFor=\"user_comment\" className=\"inline pl-1 text-xs font-bold tracking-tight\">Comments</label>\n                                <input type=\"text\" name=\"user_comment\" id=\"user_comment\" autoComplete=\"user_comment\" className=\"mt-1 h-16 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-black-500\"\n                                    value={beer.user_comment}\n                                    onChange={onChangeComment} />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"flex justify-center h-16 w-full button-background content-center\">\n                        <button type=\"submit\" className=\"m-auto h-11 w-4/5 bg-black text-white block shadow-sm sm:text-sm border-black-500 \" >\n                            Edit Your Beer\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n\n\n}\n\nexport default EditBeerDetails;","/Users/seanlewis/Documents/Code/hops/frontend/src/components/SearchModal/SearchModal.js",["94"],"import React, { useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport closeIcon from '../../static/icons/close.png'\nimport httpValue from '../../http-common'\nimport './SearchModal.css'\n\nconst SearchModal = (props) => {\n    const display = props.show ? \"flex\" : \"hidden\"\n\n    const { getAccessTokenSilently } = useAuth0();\n    const [searchResult, setSeatchResult] = useState([]);\n    const [searchValue, setSearchValue] = useState(\"\");\n\n    const search = async () => {\n        const token = await getAccessTokenSilently();\n        const url = `${httpValue}/beers/search/${searchValue}`;\n        const options = {\n            method: 'GET',\n            headers: {\n                \"Content-type\": \"application/json\",\n                \"Access-Control-Allow-Origin\": \"*\",\n                Authorization: `Bearer ${token}`,\n            }\n        }\n\n        fetch(url, options)\n            .then(response => {\n                response.json()\n                    .then((data) => {\n                        setSeatchResult(data);\n                    }\n                    )\n                    .catch(e => {\n                        console.log(e);\n                    });\n            })\n    }\n\n    return (\n        <div className={`${display} absolute top-0 h-screen w-screen bg-gray-500 bg-opacity-70`}>\n            <div className=\"w-4/5 h-4/5 m-auto \">\n                <div className=\"h-full bg-white overflow-scroll rounded-md\">\n                \n                <div className=\"flex h-10 mt-4 justify-around\">\n                    <input\n                        className=\"searchInput\"\n                        type=\"text\"\n                        value={searchValue}\n                        onChange={e => { setSearchValue(e.target.value); search() }}\n                        placeholder=\"Search by Name\"\n                    />\n                    <img src={closeIcon} onClick={props.handleClose}/>\n                </div>\n\n                    <div className=\"flex flex-col items-center\">\n                    {/* Below link needs to link to page where only comment is editable */}\n                    {\n                        searchResult.map((beer, index) => (\n                            <Link key={beer.id} className=\"box-shadow p-1.5\" to={`/BeerDetails/${beer.id}`}>\n                                <img className=\"max-w-none h-44 w-44\" alt=\"Beer\" src={beer.image_url} />\n                                <div className=\"my-3\">\n                                    <h2 className=\"text-sm font-bold tracking-tight\">{beer.name}</h2>\n                                    <h4 className=\"text-xs font-medium tracking-tight\">{beer.brewery} &#183; {beer.beer_type}</h4>\n                                </div>\n                            </Link>\n                        ))\n                    }\n                </div>\n            </div>\n        </div>\n        </div>\n    )\n}\n\nexport default SearchModal;",["95","96"],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":22,"column":8,"nodeType":"103","endLine":22,"endColumn":10,"suggestions":"104"},{"ruleId":"97","replacedBy":"105"},{"ruleId":"99","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":11,"column":20,"nodeType":"109","messageId":"110","endLine":11,"endColumn":24},{"ruleId":"101","severity":1,"message":"111","line":136,"column":8,"nodeType":"103","endLine":136,"endColumn":31,"suggestions":"112"},{"ruleId":"101","severity":1,"message":"113","line":65,"column":8,"nodeType":"103","endLine":65,"endColumn":31,"suggestions":"114"},{"ruleId":"97","replacedBy":"115"},{"ruleId":"99","replacedBy":"116"},{"ruleId":"107","severity":1,"message":"108","line":15,"column":20,"nodeType":"109","messageId":"110","endLine":15,"endColumn":24},{"ruleId":"117","severity":1,"message":"118","line":53,"column":21,"nodeType":"119","endLine":53,"endColumn":71},{"ruleId":"97","replacedBy":"120"},{"ruleId":"99","replacedBy":"121"},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBeers'. Either include it or remove the dependency array.","ArrayExpression",["124"],["122"],["123"],"no-unused-vars","'user' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getAccessTokenSilently' and 'user.sub'. Either include them or remove the dependency array.",["125"],"React Hook useEffect has a missing dependency: 'getAccessTokenSilently'. Either include it or remove the dependency array.",["126"],["122"],["123"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["122"],["123"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},"Update the dependencies array to be: [getBeers]",{"range":"133","text":"134"},"Update the dependencies array to be: [getAccessTokenSilently, props.match.params.id, user.sub]",{"range":"135","text":"136"},"Update the dependencies array to be: [getAccessTokenSilently, props.match.params.id]",{"range":"137","text":"138"},[822,824],"[getBeers]",[4473,4496],"[getAccessTokenSilently, props.match.params.id, user.sub]",[2387,2410],"[getAccessTokenSilently, props.match.params.id]"]