[{"/Users/seanlewis/Documents/Code/hops/frontend/src/index.js":"1","/Users/seanlewis/Documents/Code/hops/frontend/src/App.js":"2","/Users/seanlewis/Documents/Code/hops/frontend/src/reportWebVitals.js":"3","/Users/seanlewis/Documents/Code/hops/frontend/src/components/AddBeer/AddBeer.js":"4","/Users/seanlewis/Documents/Code/hops/frontend/src/components/BeerList/BeerList.js":"5","/Users/seanlewis/Documents/Code/hops/frontend/src/services/hops.service.js":"6","/Users/seanlewis/Documents/Code/hops/frontend/src/http-common.js":"7","/Users/seanlewis/Documents/Code/hops/frontend/src/frontCredentials.js":"8","/Users/seanlewis/Documents/Code/hops/frontend/src/components/BeerDetails/BeerDetails.js":"9","/Users/seanlewis/Documents/Code/hops/frontend/src/components/NavBar/NavBar.js":"10","/Users/seanlewis/Documents/Code/hops/frontend/src/components/LoginPage/LoginPage.js":"11","/Users/seanlewis/Documents/Code/hops/frontend/src/components/ProfilePage/ProfilePage.js":"12","/Users/seanlewis/Documents/Code/hops/frontend/src/components/Loading/Loading.js":"13","/Users/seanlewis/Documents/Code/hops/frontend/src/auth/ProtectedRoute.js":"14"},{"size":1025,"mtime":1615029266904,"results":"15","hashOfConfig":"16"},{"size":1167,"mtime":1614809537578,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1607376746245,"results":"18","hashOfConfig":"16"},{"size":14086,"mtime":1615846609367,"results":"19","hashOfConfig":"16"},{"size":3329,"mtime":1615661934665,"results":"20","hashOfConfig":"16"},{"size":289,"mtime":1615057172210,"results":"21","hashOfConfig":"16"},{"size":1208,"mtime":1615057007896,"results":"22","hashOfConfig":"16"},{"size":359,"mtime":1610910825178,"results":"23","hashOfConfig":"16"},{"size":4031,"mtime":1614929838895,"results":"24","hashOfConfig":"16"},{"size":4311,"mtime":1612129950177,"results":"25","hashOfConfig":"16"},{"size":699,"mtime":1611524878844,"results":"26","hashOfConfig":"16"},{"size":476,"mtime":1615661308436,"results":"27","hashOfConfig":"16"},{"size":220,"mtime":1614585855714,"results":"28","hashOfConfig":"16"},{"size":429,"mtime":1615922177073,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"beoc50",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/seanlewis/Documents/Code/hops/frontend/src/index.js",[],["61","62"],"/Users/seanlewis/Documents/Code/hops/frontend/src/App.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/reportWebVitals.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/components/AddBeer/AddBeer.js",["63"],"import React, {useState} from 'react';\nimport S3FileUpload from 'react-s3'\nimport hopsDataService from '../../services/hops.service';\nimport NavBar from '../NavBar/NavBar'\n\nimport addPhoto from '../../static/icons/addPhoto.svg';\nimport './AddBeer.css';\n// import notesIcon from '../../static/icons/notes.svg';\nimport strengthIcon from '../../static/icons/strength.svg';\nimport typeIcon from '../../static/icons/type.svg';\nimport beerIcon from '../../static/icons/beer.svg';\n\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nimport axios from 'axios'\n\n\n// const creds = require('../../frontCredentials');\n\n// const config = {\n//     bucketName: creds.bucketName,\n//     dirName: creds.dirName,\n//     accessKeyId: creds.accessKey,\n//     secretAccessKey: creds.secretKey,\n//     region: 'eu-west-1',\n// }\n\nconst config = {\n    bucketName: \"hops-bucket\",\n    dirName: \"user-images\",\n    accessKey: process.env.REACT_APP_S3_ACCESS_KEY,\n    secretKey: process.env.REACT_APP_S3_SECRET_KEY,\n    region: 'eu-west-1',\n}\n\n\n\nfunction AddBeer(props){\n\n    const { getAccessTokenSilently } = useAuth0();\n\n    const [beer, setBeer] = useState({\n        id: null,\n        name: \"\",\n        details: \"\",\n        beerType: \"\",\n        brewery: \"\",\n        alcPer: \"\",\n        country: \"\",\n        container: \"\",\n        image_url: \"https://hops-bucket.s3-eu-west-1.amazonaws.com/static_images/no_image_can.jpg\",\n        submitted: false\n    })\n\n    const onChangeName = (e) => {\n        setBeer({\n            ...beer,\n            name: e.target.value\n        });\n    }\n    \n    const onChangeDetails = (e) => {\n        setBeer({\n            ...beer,\n            details: e.target.value\n        });\n    }\n\n    const onChangeBeerType = (e) => {\n        setBeer({\n            ...beer,\n            beerType: e.target.value\n        });\n    }\n\n    const onChangeBrewery = (e) => {\n        setBeer({\n            ...beer,\n            brewery: e.target.value\n        });\n    }\n\n    const onChangeAlcPer = (e) => {\n        setBeer({\n            ...beer,\n            alcPer: e.target.value\n        });\n    }\n\n    const onChangeCountry = (e) => {\n        setBeer({\n            ...beer,\n            country: e.target.value\n        });\n    }\n\n    const onChangeContainer = (e) => {\n        setBeer({\n            ...beer,\n            container: e.target.value\n        });\n    }\n\n    const onChangeImageS3upload = (e) => {\n        setBeer({\n            ...beer,\n            image_url: \"https://hops-bucket.s3-eu-west-1.amazonaws.com/static_images/beer_loading.gif\"\n        })\n        console.log(e)\n        console.log(config)\n        // form[0] is the loaction of the image upload field in the form. \n        S3FileUpload.uploadFile(e.target.form[0].files[0], config)\n            .then((upload) => {\n                console.log(upload.location)\n                this.setState({\n                    image_url: upload.location,\n                })\n\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    const saveBeer = async (e) => {\n\n        const token = await getAccessTokenSilently();\n        const url = 'http://localhost:8080/api/beers';\n\n        let data = {\n            name: beer.name,\n            details: beer.details,\n            beer_type: beer.beerType,\n            brewery: beer.brewery,\n            alc_per: beer.alcPer,\n            country_origin: beer.country,\n            container: beer.container,\n            image_url: beer.image_url\n        };\n        \n        const headers = {\n            \"Content-type\": \"application/json\",\n            \"Access-Control-Allow-Origin\": \"*\",\n            Authorization: `Bearer ${token}`,\n        }\n\n        axios.post(url, data, {\n            headers: headers\n        })\n        .then(() => {\n            console.log(\"Whats going on\")\n            setBeer({\n                ...beer,\n                submitted: true\n            });\n        })\n            .catch((err) => {\n                console.log(err)\n            })\n\n        // const postPromise = new Promise((resolve, reject) => {\n        //    hopsDataService.create(data)\n        //    resolve()\n        // })\n        // postPromise\n\n    }\n\n    const newBeer = () => {\n        setBeer({\n            ...beer, \n            id: null,\n            name: \"\",\n            details: \"\",\n            beerType: \"\",\n            brewery: \"\",\n            alcPer: \"\",\n            country: \"\",\n            container: \"\",\n            image_url: \"https://hops-bucket.s3-eu-west-1.amazonaws.com/static_images/no_image_can.jpg\",\n            submitted: false\n        })\n    }\n        return (\n            <div >\n                {beer.submitted ? (\n                    <div>\n                        <h4>Beer submitted successfully!</h4>\n                        {/* If they liked it: May you always find a cold one. If not: May you always see it languish in the bargain bin */}\n                        <button  onClick={newBeer}>\n                            Add\n                        </button>\n                    </div>\n                ) : (\n\n                    <div className=\"page\">\n                        <NavBar />\n                        <div className=\"mt-5 md:mt-0 md:col-span-2\">\n                            <form onSubmit={saveBeer}>\n\n                                <div className=\"relative\">\n                                    <img className=\"beer-image\" src={beer.image_url} alt=\"Beer Placeholder\"></img>\n                                    \n                                    <div className=\"absolute top-44 flex w-full items-center justify-center\">\n                                        <label className=\"flex flex-col items-center tracking-wide uppercase cursor-pointer hover:bg-blue hover:text-white\">\n                                                <img src={addPhoto} alt=\"add icon\"/>\n                                            <input\n                                                className=\"hidden\"\n                                                src={addPhoto}\n                                                onChange={onChangeImageS3upload}\n                                                type=\"file\"\n                                                id=\"input-image\"\n                                                name=\"input-Image\"\n                                                accept=\"image/*\"\n                                                capture=\"camera\"\n                                            />\n                                        </label>\n                                    </div>\n                                </div> \n\n                                <div className=\"shadow overflow-hidden sm:rounded-md\">\n                                    <div className=\"px-4 py-5 bg-white sm:p-6\">\n                                        <div className=\"col-span-6\">\n                                            <img className=\"inline\" alt=\"Beer Icon\" src={beerIcon} />\n                                            <label htmlFor=\"name\" className=\"inline pl-1 text-xs font-bold tracking-tight\">Beer Name</label>\n                                            <input required type=\"text\" name=\"name\" id=\"name\" autoComplete=\"Beer Name\" className=\"mt-1 focus:solid-indigo-700 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-black-500\"\n                                            value={beer.name}\n                                            onChange={onChangeName} />\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"shadow overflow-hidden sm:rounded-md\">\n                                    <div className=\"px-4 py-5 bg-white sm:p-6\">\n                                        <div className=\"col-span-6\">\n                                            <img className=\"inline\" alt=\"Description Icon\" src={beerIcon} />\n                                            <label htmlFor=\"description\" className=\"inline pl-1 text-xs font-bold tracking-tight\">Description</label>\n                                            <input type=\"text\" name=\"description\" id=\"description\" autoComplete=\"description\" className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-black-500\"\n                                            value={beer.details}\n                                            onChange={onChangeDetails} />\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"shadow overflow-hidden sm:rounded-md\">\n                                    <div className=\"px-4 py-5 bg-white sm:p-6\">\n\n                                        <div className=\"col-span-6\">\n                                            <img className=\"inline\" alt=\"Type Icon\" src={typeIcon} />\n                                            <label htmlFor=\"beerType\" className=\"inline pl-1 text-xs font-bold tracking-tight\">Beer Type</label>\n                                            <input type=\"text\" name=\"beerType\" id=\"beerType\" autoComplete=\"Beer Type\" className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-black-500\" \n                                            value={beer.beerType}\n                                            onChange={onChangeBeerType} />\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"shadow overflow-hidden sm:rounded-md\">\n                                    <div className=\"px-4 py-5 bg-white sm:p-6\">\n                                        <div className=\"col-span-6\">\n                                            <img className=\"inline\" alt=\"Brewery Icon\" src={beerIcon} />\n                                            <label htmlFor=\"brewery\" className=\"inline pl-1 text-xs font-bold tracking-tight\">Brewery</label>\n                                            <input type=\"text\" name=\"brewery\" id=\"brewery\" autoComplete=\"brewery\" className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-black-500\" \n                                            value={beer.brewery}\n                                            onChange={onChangeBrewery}/>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"shadow overflow-hidden sm:rounded-md\">\n                                    <div className=\"px-4 py-5 bg-white sm:p-6\">\n                                        <div className=\"col-span-6\">\n                                            <img className=\"inline\" alt=\"Strength Icon\" src={strengthIcon} />\n                                            <label htmlFor=\"alcPer\" className=\"inline pl-1 text-xs font-bold tracking-tight\">Alcohol Percentage</label>\n                                            <input type=\"text\" name=\"alcPer\" id=\"alcPer\" autoComplete=\"alcPer\" className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-black-500\" \n                                            value={beer.alcPer}\n                                            onChange={onChangeAlcPer} />\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"shadow overflow-hidden sm:rounded-md\">\n                                    <div className=\"px-4 py-5 bg-white sm:p-6\">\n                                        <div className=\"col-span-6\">\n                                            <img className=\"inline\" alt=\"Country Icon\" src={beerIcon} />\n                                            <label htmlFor=\"country\" className=\"inline pl-1 text-xs font-bold tracking-tight\">Country</label>\n                                            <input type=\"text\" name=\"country\" id=\"country\" autoComplete=\"country\" className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-black-500\" \n                                            value={beer.country}\n                                            onChange={onChangeCountry}/>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"shadow overflow-hidden sm:rounded-md\">\n                                    <div className=\"px-4 py-5 bg-white sm:p-6\">\n                                        <div className=\"col-span-6\">\n                                            <img className=\"inline\" alt=\"Container Icon\" src={beerIcon} />\n                                            <label htmlFor=\"container\" className=\"inline pl-1 text-xs font-bold tracking-tight\">Container</label>\n                                            <input type=\"text\" name=\"container\" id=\"container\" autoComplete=\"container\" className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-black-500\" \n                                            value={beer.container}\n                                            onChange={onChangeContainer}/>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                    <div className=\"flex justify-center h-16 w-full button-background content-center\"> \n                                        <button type=\"submit\" className=\"m-auto h-11 w-4/5 bg-black text-white block shadow-sm sm:text-sm border-black-500 \" >\n                                        Add Beer\n                                        </button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                    )}\n            </div>\n        );\n}\n\nexport default AddBeer;","/Users/seanlewis/Documents/Code/hops/frontend/src/components/BeerList/BeerList.js",["64"],"import React, { useEffect, useState } from 'react';\n// import hopsDataService from '../../services/hops.service';\nimport NavBar from '../NavBar/NavBar'\n\nimport { Link } from 'react-router-dom';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport './BeerList.css';\nimport randomIcon from '../../static/icons/randomIcon.svg'\nimport addIcon from '../../static/icons/addIcon.svg'\n\n\nconst BeerList = () => {\n\n    const { getAccessTokenSilently } = useAuth0();\n    const [beers, setBeers] = useState([])\n\n\n    useEffect(() => {\n        getBeers()\n    }, []);\n\n    const getBeers = async () => {\n        const token = await getAccessTokenSilently();\n        const url = 'http://localhost:8080/api/beers';\n        const options = {\n            method: 'GET',\n            headers: {\n                \"Content-type\": \"application/json\",\n                \"Access-Control-Allow-Origin\": \"*\",\n                Authorization: `Bearer ${token}`,\n            }\n        }\n\n        fetch(url, options)\n            .then(response => {\n                response.json()\n                    .then((data) => {\n                        setBeers(data);\n                }\n            )\n        .catch(e => {\n            console.log(e);\n        });\n        })\n    }    \n\n    const randomBeer = () => {\n        function getRandomInt(max) {\n            return Math.floor(Math.random() * Math.floor(max));\n        }\n        const beerIds = []\n        beers.forEach(beer => beerIds.push(beer.id))\n        const numberofBeers = beerIds.length\n        const randomNumber = getRandomInt(numberofBeers)\n\n        return beerIds[randomNumber]\n    }\n\n\n    return(\n        <div>\n            <NavBar />\n            <div>\n                <main className=\"flex flex-col justify-between\">\n                    {/* Beer List - Copy as required for others */}\n                    <div> \n                        <h1>The Beer List</h1>\n                        <div className=\"flex flex-grow overflow-x-auto\">\n                            {\n                                beers.map((beer, index) => (\n                                    <Link key={beer.id} className=\"box-shadow w-screen p-1.5\" to={`/BeerDetails/${beer.id}`}>\n                                        <img className=\"max-w-none h-44 w-44\" alt=\"Beer\" src={beer.image_url}/>\n                                        <div className=\"my-3\">\n                                        <h2 className=\"text-sm font-bold tracking-tight\">{beer.name}</h2>\n                                        <h4 className=\"text-xs font-medium tracking-tight\">{beer.brewery} &#183; {beer.beer_type}</h4>\n                                        </div>\n                                    </Link>\n                                ))\n                            }\n                        </div>\n                    </div>                        \n                </main>\n\n                <div className=\"flex items-center justify-center sticky\">\n                    <Link to={`/AddBeer`}>\n                        <img alt=\"Add Beer Icon\" src={addIcon} />\n                    </Link>\n                    <Link to={`/BeerDetails/${randomBeer()}`}>\n                        <img alt=\"Select Random Beer Icon\" src={randomIcon} />\n                    </Link>\n                </div>\n            </div>\n        </div>\n        )\n}\n\nexport default BeerList;","/Users/seanlewis/Documents/Code/hops/frontend/src/services/hops.service.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/http-common.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/frontCredentials.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/components/BeerDetails/BeerDetails.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/components/NavBar/NavBar.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/components/LoginPage/LoginPage.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/components/ProfilePage/ProfilePage.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/components/Loading/Loading.js",[],"/Users/seanlewis/Documents/Code/hops/frontend/src/auth/ProtectedRoute.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":23},{"ruleId":"73","severity":1,"message":"74","line":20,"column":8,"nodeType":"75","endLine":20,"endColumn":10,"suggestions":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'hopsDataService' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBeers'. Either include it or remove the dependency array.","ArrayExpression",["79"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [getBeers]",{"range":"82","text":"83"},[550,552],"[getBeers]"]